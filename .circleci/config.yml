version: 2.1

orbs:
  tools: gotest/tools@0.0.13

executors:
  build:
    docker:
      - image: circleci/golang:1.16
  deploy:
    docker:
      - image: circleci/node:12

references:
  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

commands:
  check-uncommitted:
    description: Check for uncommitted changes.
    steps:
      - run:
          name: Check for uncomitted changes.
          command: |
            if [[ `git status --porcelain` ]]; then
              echo "ERROR: uncommitted changes"
              git status --porcelain
              exit 1
            fi

jobs:
  build:
    executor:
      name: build
    working_directory: *workspace_root
    steps:
      - checkout
      - tools/install-golangci-lint:
          version: 1.33.2
      - run: make check-style
      - run: make test
      - run: make build
      - check-uncommitted
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  deploy:
    executor:
      name: deploy
    working_directory: *workspace_root
    steps:
      - *attach_workspace
      - run:
          name: Install Serverless CLI and dependencies
          command: sudo npm i -g serverless@"<2.0.0"
      - run:
          name: Deploy Function
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                export AWS_ACCESS_KEY_ID=$AWS_STAGING_ACCESS_KEY_ID
                export AWS_SECRET_ACCESS_KEY=$AWS_STAGING_SECRET_ACCESS_KEY
                sudo -E serverless deploy function -f server --stage staging
            elif [ "${CIRCLE_BRANCH}" == "production" ]; then
                export AWS_ACCESS_KEY_ID=$AWS_PRODUCTION_ACCESS_KEY_ID
                export AWS_SECRET_ACCESS_KEY=$AWS_PRODUCTION_SECRET_ACCESS_KEY
                sudo -E serverless deploy function -f server --stage production
            else
                echo "Unexpected branch ${CIRCLE_BRANCH}"
                exit 1
            fi

workflows:
  version: 2
  ci:
    jobs:
      - build
      - deploy:
          context: mattermost-marketplace
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - production
